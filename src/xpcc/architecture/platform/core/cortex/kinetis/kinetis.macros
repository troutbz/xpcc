%# coding: utf-8
%# ----------------------------------------------------------------------------
%#* Copyright (c) 2013, Roboterclub Aachen e.V.
%#* All rights reserved.
%#*
%#* Redistribution and use in source and binary forms, with or without
%#* modification, are permitted provided that the following conditions are met:
%#*
%#*     * Redistributions of source code must retain the above copyright
%#*       notice, this list of conditions and the following disclaimer.
%#*     * Redistributions in binary form must reproduce the above copyright
%#*       notice, this list of conditions and the following disclaimer in the
%#*       documentation and/or other materials provided with the distribution.
%#*     * Neither the name of the Roboterclub Aachen e.V. nor the
%#*       names of its contributors may be used to endorse or promote products
%#*       derived from this software without specific prior written permission.
%#*
%#* THIS SOFTWARE IS PROVIDED BY ROBOTERCLUB AACHEN E.V. ''AS IS'' AND ANY
%#* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
%#* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
%#. IN NO EVENT SHALL ROBOTERCLUB AACHEN E.V. BE LIABLE FOR ANY
%#* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
%#* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
%#* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
%#* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
%#* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
%#* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
%#*/


%# This File includes Freescale Kinetis specific macros for the generic cortex startup.c


%% macro defines()
#define NR_INTERRUPTS 46
%% endmacro


%% macro appendInterrupts()
%% do i.update({ 0: ["DMA0_IRQHandler", "DMA channel 0 tranfer complete"]})
%% do i.update({ 1: ["DMA1_IRQHandler", "DMA channel 1 tranfer complete"]})
%% do i.update({ 2: ["DMA2_IRQHandler", "DMA channel 2 tranfer complete"]})
%% do i.update({ 3: ["DMA3_IRQHandler", "DMA channel 3 tranfer complete"]})
%% do i.update({ 4: ["DMA_Error_IRQHandler", "DMA Error channels 0-3"]})
%% do i.update({ 6: ["FTFL_IRQHandler", "flash command complete"]})
%% do i.update({ 7: ["Read_Collision_IRQHandler", "flash read collision"]})
%% do i.update({ 8: ["LVD_LVW_IRQHandler", "low voltage detect / low voltage warning"]})
%% do i.update({ 9: ["LLW_IRQHandler", "low leak wakeup"]})
%% do i.update({10: ["Watchdog_IRQHandler", ""]})
%% do i.update({11: ["I2C0_IRQHandler", ""]})
%% do i.update({12: ["SPI0_IRQHandler", ""]})
%% do i.update({13: ["I2S0_Tx_IRQHandler", ""]})
%% do i.update({14: ["I2S0_Rx_IRQHandler", ""]})
%% do i.update({15: ["UART0_LON_IRQHandler", ""]})
%% do i.update({16: ["UART0_RX_TX_IRQHandler", ""]})
%% do i.update({17: ["UART0_ERR_IRQHandler", ""]})
%% do i.update({18: ["UART1_RX_TX_IRQHandler", ""]})
%% do i.update({19: ["UART1_ERR_IRQHandler", ""]})
%% do i.update({20: ["UART2_RX_TX_IRQHandler", ""]})
%% do i.update({21: ["UART2_ERR_IRQHandler", ""]})
%% do i.update({22: ["ADC0_IRQHandler", ""]})
%% do i.update({23: ["COMP0_IRQHandler", ""]})
%% do i.update({24: ["COMP1_IRQHandler", ""]})
%% do i.update({25: ["FTM0_IRQHandler", ""]})
%% do i.update({26: ["FTM1_IRQHandler", ""]})
%% do i.update({27: ["CMT_IRQHandler", ""]})
%% do i.update({28: ["RTC_IRQHandler", "alarm"]})
%% do i.update({29: ["RTC_Seconds_IRQHandler", "seconds"]})
%% do i.update({30: ["PIT0_IRQHandler", "channel 0"]})
%% do i.update({31: ["PIT1_IRQHandler", "channel 1"]})
%% do i.update({32: ["PIT2_IRQHandler", "channel 2"]})
%% do i.update({33: ["PIT3_IRQHandler", "channel 3"]})
%% do i.update({34: ["PDB0_IRQHandler", ""]})
%% do i.update({35: ["USB0_IRQHandler", ""]})
%% do i.update({36: ["USBDCD_IRQHandler", "USB Charger Detect"]})
%% do i.update({37: ["TSI0_IRQHandler", ""]})
%% do i.update({38: ["MCG_IRQHandler", ""]})
%% do i.update({39: ["LPTimer_IRQHandler", "Low Power Timer"]})
%% do i.update({40: ["PORTA_IRQHandler", "Port A pin detect"]})
%% do i.update({41: ["PORTB_IRQHandler", "Port B pin detect"]})
%% do i.update({42: ["PORTC_IRQHandler", "Port C pin detect"]})
%% do i.update({43: ["PORTD_IRQHandler", "Port D pin detect"]})
%% do i.update({44: ["PORTE_IRQHandler", "Port E pin detect"]})
%% do i.update({45: ["SWI_IRQHandler", "Software initiated interrupt"]})
%% endmacro


%% macro startupCode()
%% endmacro
